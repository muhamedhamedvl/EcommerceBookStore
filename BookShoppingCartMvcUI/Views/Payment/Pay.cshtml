@{
    ViewData["Title"] = "Complete Payment";
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h3 class="text-center">Complete Your Payment</h3>
                </div>
                <div class="card-body">
                    <form id="payment-form">
                        <div class="form-group">
                            <label for="amount">Amount (USD)</label>
                            <input type="number" class="form-control" id="amount" value="@ViewBag.TotalAmount" step="0.01" min="0.50" readonly>
                        </div>
                        <div class="form-group">
                            <label for="name">Name on Card</label>
                            <input type="text" class="form-control" id="name" placeholder="Muhamed Hamed">
                        </div>
                        <div class="form-group">
                            <label for="email">Email</label>
                            <input type="email" class="form-control" id="email" placeholder="your@email.com">
                        </div>

                        <!-- Stripe Card Element will be inserted here -->
                        <div class="form-group mt-3">
                            <label>Card Details</label>
                            <div id="card-element" class="form-control p-2" style="height: 40px;"></div>
                            <div id="card-errors" role="alert" class="text-danger mt-2"></div>
                        </div>

                        <button id="submit-button" class="btn btn-primary btn-block mt-3">
                            <span id="button-text">Pay $@ViewBag.TotalAmount</span>
                            <span id="spinner" class="spinner-border spinner-border-sm d-none" role="status"></span>
                        </button>
                        <div id="payment-message" class="mt-3 text-danger"></div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://js.stripe.com/v3/"></script>
    <script>
        // Set up Stripe.js and Elements
        const stripe = Stripe('@ViewBag.StripePublishableKey');
        const elements = stripe.elements();

        // Custom styling for the card element
        const style = {
            base: {
                color: '#32325d',
                fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
                fontSmoothing: 'antialiased',
                fontSize: '16px',
                '::placeholder': {
                    color: '#aab7c4'
                }
            },
            invalid: {
                color: '#fa755a',
                iconColor: '#fa755a'
            }
        };

        // Create an instance of the card Element
        const card = elements.create('card', {
            style: style,
            hidePostalCode: true
        });

        // Add an instance of the card Element into the `card-element` div
        card.mount('#card-element');

        // Handle real-time validation errors from the card Element
        card.addEventListener('change', function(event) {
            const displayError = document.getElementById('card-errors');
            if (event.error) {
                displayError.textContent = event.error.message;
            } else {
                displayError.textContent = '';
            }
        });

        // Handle form submission
        document.getElementById('payment-form').addEventListener('submit', async (e) => {
            e.preventDefault();

            const submitButton = document.getElementById('submit-button');
            const spinner = document.getElementById('spinner');
            const buttonText = document.getElementById('button-text');
            const paymentMessage = document.getElementById('payment-message');

            submitButton.disabled = true;
            buttonText.classList.add('d-none');
            spinner.classList.remove('d-none');
            paymentMessage.textContent = '';

            const name = document.getElementById('name').value;
            const email = document.getElementById('email').value;
            const amount = document.getElementById('amount').value;

            try {
                // Create payment intent on server
                const response = await fetch('/Payment/CreatePaymentIntent', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        amount: amount * 100, // Convert to cents
                        description: 'Book Purchase',
                        receipt_email: email
                    })
                });

                const { clientSecret } = await response.json();

                // Confirm card payment
                const { error, paymentIntent } = await stripe.confirmCardPayment(clientSecret, {
                    payment_method: {
                        card: card,
                        billing_details: {
                            name: name,
                            email: email
                        }
                    }
                });

                if (error) {
                    paymentMessage.textContent = error.message;
                } else if (paymentIntent.status === 'succeeded') {
                    // Payment succeeded - redirect to success page
                    window.location.href = `/Payment/Success?payment_intent=${paymentIntent.id}`;
                }
            } catch (error) {
                paymentMessage.textContent = 'An error occurred. Please try again.';
                console.error('Error:', error);
            } finally {
                submitButton.disabled = false;
                buttonText.classList.remove('d-none');
                spinner.classList.add('d-none');
            }
        });
    </script>
}